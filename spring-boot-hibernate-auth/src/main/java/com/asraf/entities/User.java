package com.asraf.entities;
// Generated Aug 29, 2018 6:56:08 PM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "myauthdb", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class User extends BaseEntity implements java.io.Serializable {

	private Long id;
	private String username;
	private String email;
	private String password;
	private String userStatus;
	private Date lastLogin;
	private Integer wrongPasswordAttempt;
	private Date lastWrongPasswordAttempt;
	private Date creationTime;
	private Date updateTime;
	private Set<UserVerification> userVerifications = new HashSet<UserVerification>(0);
	private Set<Role> roles = new HashSet<Role>(0);

	public User() {
	}

	public User(String username, String email, String password, String userStatus, Date creationTime, Date updateTime) {
		this.username = username;
		this.email = email;
		this.password = password;
		this.userStatus = userStatus;
		this.creationTime = creationTime;
		this.updateTime = updateTime;
	}

	public User(String username, String email, String password, String userStatus, Date lastLogin,
			Integer wrongPasswordAttempt, Date lastWrongPasswordAttempt, Date creationTime, Date updateTime,
			Set<UserVerification> userVerifications, Set<Role> roles) {
		this.username = username;
		this.email = email;
		this.password = password;
		this.userStatus = userStatus;
		this.lastLogin = lastLogin;
		this.wrongPasswordAttempt = wrongPasswordAttempt;
		this.lastWrongPasswordAttempt = lastWrongPasswordAttempt;
		this.creationTime = creationTime;
		this.updateTime = updateTime;
		this.userVerifications = userVerifications;
		this.roles = roles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "username", unique = true, nullable = false, length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "user_status", nullable = false, length = 45)
	public String getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(String userStatus) {
		this.userStatus = userStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login", length = 19)
	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	@Column(name = "wrong_password_attempt")
	public Integer getWrongPasswordAttempt() {
		return this.wrongPasswordAttempt;
	}

	public void setWrongPasswordAttempt(Integer wrongPasswordAttempt) {
		this.wrongPasswordAttempt = wrongPasswordAttempt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_wrong_password_attempt", length = 19)
	public Date getLastWrongPasswordAttempt() {
		return this.lastWrongPasswordAttempt;
	}

	public void setLastWrongPasswordAttempt(Date lastWrongPasswordAttempt) {
		this.lastWrongPasswordAttempt = lastWrongPasswordAttempt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_time", nullable = false, length = 19)
	public Date getCreationTime() {
		return this.creationTime;
	}

	public void setCreationTime(Date creationTime) {
		this.creationTime = creationTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", nullable = false, length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserVerification> getUserVerifications() {
		return this.userVerifications;
	}

	public void setUserVerifications(Set<UserVerification> userVerifications) {
		this.userVerifications = userVerifications;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", catalog = "myauthdb", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

}
